# Doxyfile 1.8.11
# Doxygen configuration for Qt6-based project with HTML output only


# This file describes the settings to be used by the documentation system
# doxygen (www.doxygen.org) for a project.
#
# All text after a double hash (##) is considered a comment and is placed in
# front of the TAG it is preceding.
#
# All text after a single hash (#) is considered a comment and will be ignored.
# The format is:
# TAG = value [value, ...]
# For lists, items can also be appended using:
# TAG += value [value, ...]
# Values that contain spaces should be placed between quotes (\" \").


# Project Name and Brief Description
PROJECT_NAME           = "Social Network Visualizer"
PROJECT_NUMBER         = "3.1"
PROJECT_BRIEF          = "Source code annotation"
PROJECT_LOGO           = ./annotation-src/socnetv-logo-manual.png  # Path to project logo

# Output directory for generated documentation
OUTPUT_DIRECTORY       = ./docs/

# Input source code directory and index.txt (or any other Doxygen markdown file)
INPUT                  = ../../app/src/  \
                        ./annotation-src/index.md  

# Path to images used in documentation (relative to OUTPUT_DIRECTORY)
IMAGE_PATH             = ./annotation-src

# File patterns to include in documentation (Qt6 source files)
FILE_PATTERNS          =                                    # Include all
# FILE_PATTERNS          =   *.cpp *.h *.qrc *.ui *.qml  # Include all relevant Qt6 source files

# HTML output generation
GENERATE_HTML          = YES
HTML_OUTPUT            = .                    # Folder where HTML output will be generated
GENERATE_TREEVIEW      = YES                  # Generate a treeview for class and file navigation
TREEVIEW_WIDTH         = 300                  # Set width of the treeview

# Use markdown (or another text file) as the main page for Doxygen
USE_MDFILE_AS_MAINPAGE = ./annotation-src/index.md  # Make index.md the main page

# Enable detailed documentation for classes and functions
EXTRACT_ALL            = YES                  # Extract all information for documenting
EXTRACT_PRIVATE        = YES                  # Do extract private members
EXTRACT_STATIC         = YES                  # Extract static members
EXTRACT_LOCAL_CLASSES  = YES                  # Include local classes (not in header files)

# Qt specific settings
# QT_AUTOMOC             = NO                    # Enable Qt's meta-object compiler for automatic moc file processing
# MOC_DIR                = moc                   # Directory for generated moc files
# UI_DIR                 = ui                    # Directory for UI files

# Enable generation of class diagrams, function call graphs, and more
CLASS_GRAPH            = YES
COLLABORATION_GRAPH    = YES
GROUP_GRAPHS           = YES
INCLUDE_GRAPH          = YES
INCLUDED_BY_GRAPH      = YES
DIRECTORY_GRAPH        = YES
HAVE_DOT               = YES                  # Enable Graphviz for generating diagrams
DOT_PATH               =                      # Path to Graphviz executable (adjust if necessary)
CALL_GRAPH             = NO                   # NOT Generate a call graph for functions
CALLER_GRAPH           = NO                   # NOT Generate a caller graph showing function calls
GRAPHICAL_HIERARCHY    = YES                  # Generate a graphical class hierarchy diagram
DOT_IMAGE_FORMAT       = png                  # Image format for diagrams (png, jpg, etc.)

# Documentation for all source files and members
INLINE_SOURCES         = NO                  # Display source code directly in the documentation

# Custom header and footer files (optional)
HTML_HEADER            = ./annotation-src/header.html  # Optional custom header HTML
HTML_FOOTER            = ./annotation-src/footer.html  # Optional custom footer HTML

# Language options for documentation
OPTIMIZE_OUTPUT_FOR_C  = YES                  # Since it's C++ code (Qt6), optimize for C++ code
# CXXFLAGS               = -std=c++17           # Use C++17 for Qt6 compatibility

# Documentation style
ALIASES                = "todo=\ref todo "    # Alias for todo notes in the documentation

# Allow warnings if certain symbols are not documented
WARN_NO_PARAMDOC       = YES                  # Warn if function parameters are not documented
WARN_IF_UNDOCUMENTED   = YES                  # Warn if certain items are not documented

# Custom style for code formatting (optional)
CODE_STYLE             = YES                  # Enables code formatting style (can further be customized)

# Generate an index page and document all classes
# GENERATE_INDEX         = YES                  # Generate an index for classes/functions

# Set the diagram format to PNG, JPG or SVG (depends on your preference)
DOT_IMAGE_FORMAT       = png                  # Generate images in PNG format for diagrams

# Disable LaTeX output (no PDF generation)
GENERATE_LATEX          = NO                  # Disable LaTeX (PDF) generation


GENERATE_TREEVIEW      = YES # optional. Also works without treeview
DISABLE_INDEX = NO
FULL_SIDEBAR = NO
HTML_EXTRA_STYLESHEET  = doxygen-awesome-css/doxygen-awesome.css annotation-src/custom.css
HTML_COLORSTYLE        = LIGHT # required with Doxygen >= 1.9.5


